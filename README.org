#+TITLE: elisp-dev-mcp: MCP Server for Agentic Elisp Development
#+AUTHOR: You
#+DATE: 2024

[[https://github.com/laurynas-biveinis/elisp-dev-mcp/actions/workflows/elisp-test.yml][https://github.com/laurynas-biveinis/elisp-dev-mcp/actions/workflows/elisp-test.yml/badge.svg]]
[[https://github.com/laurynas-biveinis/elisp-dev-mcp/actions/workflows/super-linter.yml][https://github.com/laurynas-biveinis/elisp-dev-mcp/actions/workflows/super-linter.yml/badge.svg]]

* Overview

=elisp-dev-mcp= is an Emacs package that provides an MCP (Machine Code Protocol) server
for agentic Elisp development. It enables AI agents to assist with Elisp coding tasks
by providing a structured API to interact with Emacs and manipulate Elisp code.

This package leverages [[https://github.com/laurynas-biveinis/mcp.el][mcp.el]] for the underlying MCP infrastructure.

* Installation

* Usage

** Enabling and Disabling MCP Tools

Enable the Elisp development MCP tools (registers them with MCP server):
#+begin_src elisp
(elisp-dev-mcp-enable)
#+end_src

Disable the Elisp development MCP tools (unregisters them from MCP server):
#+begin_src elisp
(elisp-dev-mcp-disable)
#+end_src

Note: Starting and stopping the MCP server itself is handled by the `mcp` package using interactive commands:
#+begin_example
M-x mcp-start
M-x mcp-stop
#+end_example

** Available MCP Handlers

*** Elisp Function Documentation
- Name: =elisp-describe-function=
- Description: Get full documentation for an Emacs Lisp function
- Parameters:
  - =function=: The name of the function to describe (string)
- Returns:
  - =description=: The function's documentation (string)
  - or =error=: Error message if something went wrong (string)

*** Elisp Function Definition
- Name: =elisp-get-function-definition=
- Description: Get the source code definition of an Emacs Lisp function
- Parameters:
  - =function=: The name of the function to retrieve (string)
- Returns:
  - For Elisp functions:
    - =source=: The function's source code including header comments if present (string)
    - =file-path=: Path to the file where the function is defined (string)
    - =start-line=: First line number of the definition including header comments (1-based integer)
    - =end-line=: Last line number of the definition (1-based integer)
  - For C-implemented functions:
    - =is-c-function=: Boolean indicator that this is a C function (always true)
    - =function-name=: The name of the function (string)
    - =message=: A message indicating the function is implemented in C source code (string)

* Development

* License
